"use strict";(self.webpackChunkopensergo_github_io=self.webpackChunkopensergo_github_io||[]).push([[8786],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),g=u(r),f=i,d=g["".concat(s,".").concat(f)]||g[f]||p[f]||o;return r?n.createElement(d,a(a({ref:t},l),{},{components:r})):n.createElement(d,a({ref:t},l))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=g;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var u=2;u<o;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},4053:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var n=r(7462),i=r(3366),o=(r(7294),r(3905)),a=["components"],c={sidebar_position:1},s="Use OpenSergo with Sentinel Go",u={unversionedId:"quick-start/go/quick-start-sentinel-go",id:"quick-start/go/quick-start-sentinel-go",title:"Use OpenSergo with Sentinel Go",description:'Sentinel is a cloud-native traffic governance component that takes "flow" as the breakthrough point and covers multiple fields including rate limiting, concurrency limiting, circuit breaking, and adaptive overload protection to guarantee the reliability of microservices.',source:"@site/docs/quick-start/go/quick-start-sentinel-go.md",sourceDirName:"quick-start/go",slug:"/quick-start/go/quick-start-sentinel-go",permalink:"/docs/quick-start/go/quick-start-sentinel-go",editUrl:"https://github.com/opensergo/opensergo.github.io/tree/main/docs/quick-start/go/quick-start-sentinel-go.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Use OpenSergo with Apache ShardingSphere",permalink:"/docs/quick-start/java/quick-start-shardingsphere"},next:{title:"Use OpenSergo with Kratos",permalink:"/docs/quick-start/go/quick-start-kratos"}},l={},p=[],g={toc:p};function f(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"use-opensergo-with-sentinel-go"},"Use OpenSergo with Sentinel Go"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://sentinelguard.io/"},"Sentinel"),' is a cloud-native traffic governance component that takes "flow" as the breakthrough point and covers multiple fields including rate limiting, concurrency limiting, circuit breaking, and adaptive overload protection to guarantee the reliability of microservices.'),(0,o.kt)("p",null,"Sentinel Go provides data-source module, which provides integration with OpenSergo spec. Please refer ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/alibaba/sentinel-golang/pull/489"},"https://github.com/alibaba/sentinel-golang/pull/489")," for work-in-progress version."))}f.isMDXComponent=!0}}]);